package com.zique.mygame;

import java.awt.Event;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.InputListener;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.Touchable;
import com.badlogic.gdx.scenes.scene2d.actions.Actions;

public class GameScreen implements Screen{

	OrthographicCamera camera;
	SpriteBatch batch;
	Stage stage;
	int sw,sh;
	//Interface _interface;
	float stateTime;
	private Background background;
	
	
	public GameScreen(MyGame game) {
		sh = Gdx.graphics.getHeight();
		sw = Gdx.graphics.getWidth();
		camera = new OrthographicCamera();
		camera.setToOrtho(false ,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
		batch = new SpriteBatch();
		stage = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), false, batch);
		stage.setCamera(camera);
		
		background = new Background();
		
		world = new World();
		
		
		stage.addActor(background);
		
		//_interface = new Interface(batch, world);
		//_interface.setViewport(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(),false);
		
		//stage.addActor(world.backgoround_stage);
		//stage.addActor(world.fishes);
		//stage.addActor(world.skills);
		
		//world.fishes.setTouchable(Touchable.enabled);
		//world.fishes.setVisible(true);

		stage.addCaptureListener(new InputListener() {
	        public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {

                return true;
	        }
	        
	        public void touchUp (InputEvent event, float x, float y, int pointer, int button) {
	        }
	        
	        @Override
	        public boolean mouseMoved(InputEvent event, float x, float y){
	        	return false;
	        }
		});
		
		InputProcessor inputProcessor = new InputProcessor() {
			
			@Override
			public boolean touchUp(int screenX, int screenY, int pointer, int button) {
				return false;
			}
			
			@Override
			public boolean touchDragged(int screenX, int screenY, int pointer) {
				return false;
			}
			
			@Override
			public boolean touchDown(int screenX, int screenY, int pointer, int button) {
			
				stage.touchDown(screenX, screenY, pointer, button);
				return false;
			}
			
			@Override
			public boolean scrolled(int amount) {
				return false;
			}
			
			@Override
			public boolean mouseMoved(int screenX, int screenY) {
				return false;
			}
			
			@Override
			public boolean keyUp(int keycode) {
				return false;
			}
			
			@Override
			public boolean keyTyped(char character) {
				return false;
			}
			
			@Override
			public boolean keyDown(int keycode) {
				return false;
			}
		};
		
		stateTime = 0f;
		Gdx.input.setInputProcessor(inputProcessor);
	}
	
	@Override
	public void render(float delta) {
		Gdx.gl.glClearColor(0, 0, 0, 1); 
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT); 
		camera.update();

		//stateTime += Gdx.graphics.getDeltaTime();
		
		stage.draw();
		stage.act(Gdx.graphics.getDeltaTime());
		
		//_interface.draw();
		
		
	}

	@Override
	public void resize(int width, int height) {

	}

	@Override
	public void show() {

	}

	@Override
	public void hide() {

	}

	@Override
	public void pause() {

	}

	@Override
	public void resume() {

	}

	@Override
	public void dispose() {

	}
}
